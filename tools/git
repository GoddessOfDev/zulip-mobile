#!/usr/bin/env bash

# Compute what remote name is being used for the upstream repo.
upstream_remote_name() {
    # Out of the names listed by `git remote`, pick one from the
    # list below, in preference order.
    grep -m1 -xFf <(git remote) <<EOF
upstream
origin
EOF
}

upstream_ref() {
    echo refs/remotes/"$(upstream_remote_name)"/main
}

base_commit() {
    tip_commit=${1:-@}
    upstream=${2:-$(upstream_ref)}
    git merge-base "$tip_commit" "$upstream"
}

# usage: files_changed [DIFFARGS..]
#
# Lists files that have changed relative to the upstream branch
# (upstream/main if that exists, else origin/main), with any arguments
# passed through to `git diff`.
#
# Excludes files that no longer exist.
files_changed() {
    base=$(base_commit)
    git diff --name-only --diff-filter=d "$base" "$@"
}

case "$1" in
    upstream-ref) upstream_ref; exit;;
    base-commit) shift; base_commit "$@"; exit;;
    '' | changed-files) shift; files_changed "$@"; exit;;
    *) exit 1;;
esac
